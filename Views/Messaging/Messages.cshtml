@model MessagesViewModel

<div>
    <h1>@Model.UserName</h1>


    <div>
        <h2>Messages</h2>

        <div>

        </div>

    </div>


    <form asp-action="SendMessage" method="post"
        style="width: 100%; border: solid 1px black; display: flex; justify-content: space-between;">
        @Html.AntiForgeryToken()

        <input asp-for="UserId" type="hidden" />

        <input asp-for="UserName" type="hidden" />

        <input asp-for="Message" type="text" placeholder="Enter a message"
            style="padding: 1rem; border: solid 1px purple;" required />

        <input type="submit" value="Send Message" />
    </form>

</div>


<script>

    document.querySelector("form").addEventListener("submit", async (e) => {
        e.preventDefault();
        const message = document.querySelector("input[asp-for='Message']").value;
        const userId = document.querySelector("input[asp-for='UserId']").value;

        if (socket.readyState === WebSocket.OPEN) {
            const payload = JSON.stringify({ recipientId: userId, message: message });
            socket.send(payload);
        }
    });

    const webSocketUrl = `ws://${window.location.host}/Messaging/Connect`;

    const socket = new WebSocket(webSocketUrl);

    socket.onopen = (event) => {
        console.log("WebSocket connection opened:", event);
    };

    socket.onmessage = (event) => {
        console.log("WebSocket message received:", event.data);
    };

    socket.onerror = (event) => {
        console.error("WebSocket error:", event);
    };

    socket.onclose = (event) => {
        console.log("WebSocket connection closed:", event);
    };

</script>